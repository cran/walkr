// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// rcppeigen_ftrans
Eigen::MatrixXd rcppeigen_ftrans(const Eigen::MatrixXd& A);
RcppExport SEXP walkr_rcppeigen_ftrans(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type A(ASEXP);
    __result = Rcpp::wrap(rcppeigen_ftrans(A));
    return __result;
END_RCPP
}
// rcppeigen_fsolve
Eigen::MatrixXd rcppeigen_fsolve(const Eigen::Map<Eigen::MatrixXd>& A);
RcppExport SEXP walkr_rcppeigen_fsolve(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type A(ASEXP);
    __result = Rcpp::wrap(rcppeigen_fsolve(A));
    return __result;
END_RCPP
}
// rcppeigen_fdet
double rcppeigen_fdet(const Eigen::Map<Eigen::MatrixXd>& A);
RcppExport SEXP walkr_rcppeigen_fdet(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type A(ASEXP);
    __result = Rcpp::wrap(rcppeigen_fdet(A));
    return __result;
END_RCPP
}
// rcppeigen_fprod
Eigen::MatrixXd rcppeigen_fprod(const Eigen::Map<Eigen::MatrixXd>& A, const Eigen::Map<Eigen::MatrixXd>& B);
RcppExport SEXP walkr_rcppeigen_fprod(SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type B(BSEXP);
    __result = Rcpp::wrap(rcppeigen_fprod(A, B));
    return __result;
END_RCPP
}
// rcppeigen_fcrossprod
Eigen::MatrixXd rcppeigen_fcrossprod(const Eigen::Map<Eigen::MatrixXd>& A, const Eigen::Map<Eigen::MatrixXd>& B);
RcppExport SEXP walkr_rcppeigen_fcrossprod(SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type B(BSEXP);
    __result = Rcpp::wrap(rcppeigen_fcrossprod(A, B));
    return __result;
END_RCPP
}
// rcppeigen_ftcrossprod
Eigen::MatrixXd rcppeigen_ftcrossprod(const Eigen::Map<Eigen::MatrixXd>& A, const Eigen::Map<Eigen::MatrixXd>& B);
RcppExport SEXP walkr_rcppeigen_ftcrossprod(SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type B(BSEXP);
    __result = Rcpp::wrap(rcppeigen_ftcrossprod(A, B));
    return __result;
END_RCPP
}
